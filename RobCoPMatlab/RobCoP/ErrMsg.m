function ErrMsg(I)
% Displays error messages.

%% prepare error message
if strcmp(I,'RobustCoPlot:Input')
    Msg = [...
'Input of the function should be a structure.' ...
          ];
end
if strcmp(I,'RobustCoPlot:X')
    Msg = [...
'Input of the function should be a structure with ''X'' field,\n' ...
'possible value of which can be a TXT file name.' ...
          ];
end
if strcmp(I,'RobustCoPlot:ColorColumn')
    Msg = [...
'More than 1 color column selection is not possible, and ColorColumn value\n' ...
'should be less than the number of variables defined in data file.' ...
          ];
end
if strcmp(I,'RobustCoPlot:ColorValues')
    Msg = [...
'Since ColorColumn field is given, ColorValues field of the input\n' ...
'structure should be given.' ...
          ];
end
if strcmp(I,'RobustCoPlot:MDSMethod')
    Msg = [...
'Input of the function should be a structure with ''MDSMethod'' field,\n' ...
'possible values of which are ''RMDS'' or ''NMDS''.' ...
          ];
end
if strcmp(I,'RobustCoPlot:InitMethod') || ...
        strcmp(I,'RobustMDS:InitMethod') || strcmp(I,'NonMetricMDSwithSMACOF:InitMethod')
    Msg = [...
'Input of the function should be a structure with ''InitMethod'' field,\n' ...
'possible values of which are ''Random'' or ''PCA''.' ...
          ];
end
if strcmp(I,'ProcessFile:NumOfVariables')
    Msg = [...
'Whether the first line of the data file is not comma separated variable\n' ...
'names or the number of variables is less than or equal to 2.' ...
          ];
end
if strcmp(I,'RobustCoPlot:DataColNums')
    Msg = [...
'Input of the function should be a structure with DataColNums field,\n' ...
'each possible value of which should be less than the number of variables\n' ...
'defined in data file.' ...
          ];
end
if strcmp(I,'RobustCoPlot:StdType') || strcmp(I,'GenerateDisSimilarity:StdType')
    Msg = [...
'Input of the function should be a structure with ''StdType'' field,\n' ...
'possible value of which can be ''Mean'' or ''Median''.' ...
          ];
end
if strcmp(I,'RobustCoPlot:DisSimDist') || strcmp(I,'GenerateDisSimilarity:DisSimDist')
    Msg = [...
'Input of the function should be a structure with ''DisSimDist'' field,\n' ...
'possible value of which can be ''Euclidean'', ''Cityblock'' or ''Dominance''.' ...
          ];
end
if strcmp(I,'RobustCoPlot:OutlierRatio') || strcmp(I,'RobustMDS:OutlierRatio')
    Msg = [...
'Since ''RMDS'' is selected as MDS method, input of the function should\n' ...
'be a structure with ''OutlierRatio'' field, possible value of which can\n' ...
'be a rational number between 0 and 1.' ...
          ];
end
if strcmp(I,'RobustCoPlot:VecCorrMethod') || strcmp(I,'CoPlot:VecCorrMethod')
    Msg = [...
'Since ''DrawGraph'' is selected as ''CoPlot'' or ''ALL'', input of the\n' ... 
'function should be a structure with ''VecCorrMethod'' field, possible\n' ...
'values of which can be ''PCC'' or ''MADCC''.' ...
          ];
end
%% prepare a format for error messages
FormattedMsg=['\n' I '\n' Msg];
error(I,FormattedMsg);